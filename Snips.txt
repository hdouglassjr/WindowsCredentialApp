 //using(var credential = new Credential())
           // {
           //     credential.Target = "DemoTarget";
           //     credential.Load();
           //     Console.WriteLine($"{credential.Username} Target: {credential.Target} Password: {credential.Password}");

           //     //credential.Password = "DemoPwd11";
           //     //credential.Save();
           //     //Console.WriteLine($"{credential.Username} Target: {credential.Target} Password: {credential.Password}");

           // }
            Credential cred2 = new Credential();
            cred2.Target = "DemoTarget";
            cred2.Load();
            CredentialSet credentials = new CredentialSet();
            credentials.Add(cred2);

            foreach(var cred in credentials)
            {
                Console.WriteLine(cred.Username);
            }
            //const string cSplitString = "target="; // word "target" might differ in other languages

            //var targets = new List<string>();
            //var proc = new Process // We need separate process to get the output
            //{
            //    StartInfo = new ProcessStartInfo
            //    {
            //        FileName = "cmdkey.exe",
            //        Arguments = "/list",
            //        UseShellExecute = false,
            //        RedirectStandardOutput = true,
            //        CreateNoWindow = true
            //    }
            //};
            //proc.Start();

            //// reading output from the process
            //while (!proc.StandardOutput.EndOfStream)
            //{
            //    string line = proc.StandardOutput.ReadLine();
            //    if (line.Contains(cSplitString))
            //        targets.Add(line.Substring(line.IndexOf(cSplitString) + cSplitString.Length));
            //}

            //if (targets.Count > 0)
            //{
            //    foreach (var target in targets)
            //    {
            //        Console.WriteLine(target);
            //    }
            //}


			  private List<CredentialModel> MapCredentialModels()
        {
            List<Credential> credentials = _credentials.CurrentCredentials.ToList();
            _credentialModels = new List<CredentialModel>();

            foreach (var credential in credentials)
            {
                var credModel = new CredentialModel
                {
                    Target = credential.Target,
                    Username = credential.Username,
                    Password = credential.Password,
                    LastWriteTime = credential.LastWriteTime
                };
                _credentialModels.Add(credModel);
            }

            return _credentialModels;
        }