<controls:MetroWindow
    x:Class="WindowsCredWpfApp.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:controls="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:iconPacks="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:viewmodel="clr-namespace:WindowsCredWpfApp.ViewModels"
    mc:Ignorable="d"
    GlowBrush="{DynamicResource AccentColorBrush}"
    Title="Windows Credential Application" Height="600" Width="900"
    ShowTitleBar="True"
    TextElement.Foreground="{DynamicResource MaterialDesignBody}"
    Background="{DynamicResource MaterialDesignPaper}"
    TextElement.FontWeight="Medium"
    TextElement.FontSize="14"
    FontFamily="pack://application:,,,/MaterialDesignThemes.Wpf;component/Resources/Roboto/#Roboto">

    <Window.Resources>
        <viewmodel:WinCredViewModel x:Key="ViewModel" />
        <Style x:Key="DebugGrid" TargetType="Grid">
            <Style.Triggers>
                <Trigger Property="IsMouseOver" Value="True">
                    <Setter Property="ShowGridLines" Value="True" />
                </Trigger>
            </Style.Triggers>
        </Style>
        <Style TargetType="ListBoxItem">
            <Style.Triggers>
                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                    <Setter Property="Background" Value="Gainsboro" />
                </Trigger>
                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                    <Setter Property="Background" Value="White" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>
    <Grid DataContext="{StaticResource ViewModel}">
        <Grid.RowDefinitions>
            <RowDefinition Height="40*" />
            <RowDefinition Height="25" />
            <RowDefinition Height="200*" />
            <RowDefinition Height="30*" />
        </Grid.RowDefinitions>

        <Grid Name="CredToolBar">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="220" />
                <ColumnDefinition Width="450" />
                <ColumnDefinition Width="200*" />
            </Grid.ColumnDefinitions>
            <TextBox Grid.Column="0" Grid.Row="0" controls:TextBoxHelper.ClearTextButton="True"
                     controls:TextBoxHelper.Watermark="Filter list by Target" Name="TxtFilter"
                     HorizontalAlignment="Center" TextChanged="TxtSearchBox_TextChanged" Height="25" Width="200" />

            <TextBox controls:TextBoxHelper.ClearTextButton="True"
                     controls:TextBoxHelper.Watermark="Add updated password value and click save button" Grid.Row="0"
                     Grid.Column="1" HorizontalAlignment="Right" Name="TxtNewPassword" Width="200" Height="26"
                     VerticalAlignment="Center" />
            <!--<Button Grid.Row="0" Grid.Column="2" Margin="0,0,10,0" BorderBrush="White"
                    Content="{iconPacks:FontAwesome GrinStarsSolid}" Name="EditPasssword"
                    ToolTip="Save credential password for all selected." Click="Button_Click" Width="90" />-->
            <ToggleButton Name="EditPasssword" Grid.Row="0" Grid.Column="2" Width="50" Height="50" Margin="10,10,0,0"
                          Content="{iconPacks:FontAwesome SaveSolid}" Style="{DynamicResource MetroAccentButton}"
                          Click="Button_Click" />

        </Grid>
        <CheckBox Name="CheckAllBox" Margin="5,0,0,0" Padding="2,0,5,2" Grid.Row="1" Content="Select All"
                  HorizontalAlignment="Left" Style="{DynamicResource MaterialDesignAccentCheckBox}"
                  Checked="CheckBox_Checked" Unchecked="CheckBox_Unchecked" />
        <ListBox Name="LstItems" ItemsSource="{Binding Credentials,Mode=TwoWay}" AlternationCount="2"
                 Grid.Row="2" SelectionMode="Multiple">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <DockPanel>
                            <CheckBox DockPanel.Dock="Left" Content="{Binding Target}"
                                      IsChecked="{Binding RelativeSource={RelativeSource FindAncestor,AncestorType={x:Type ListBoxItem}},Path=IsSelected}"
                                      Style="{DynamicResource MaterialDesignAccentCheckBox}" Margin="0,5,10,5"
                                      Padding="5,0,0,0" FontFamily="{DynamicResource MaterialDesignFont}" />
                        </DockPanel>
                        <Grid Margin="10 10 10 10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition />
                                <ColumnDefinition />
                                <ColumnDefinition />
                            </Grid.ColumnDefinitions>

                            <TextBlock Grid.Row="0" Grid.Column="0">
                                <Run FontStyle="Normal" Text="{Binding Username,StringFormat='Username:  {0}'}" />
                                <Run Text=" | " />
                            </TextBlock>
                            <TextBlock Grid.Row="0" Grid.Column="1">
                                <Run Text="{Binding Type, StringFormat=' Credential Type:  {0}'}" />
                                <Run Text=" | " />
                            </TextBlock>
                            <TextBlock Grid.Row="0" Grid.Column="2">
                                <Run Text="{Binding LastWriteTime, Mode=OneWay, StringFormat='Last modified:  {0}'}" />
                            </TextBlock>
                        </Grid>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>
        <Label Grid.Row="3">
            <TextBlock Margin="5,15,0,0"
                       Text="{Binding ElementName=LstItems,Path=SelectedItems.Count,StringFormat='Selected count: {0}'}" />
        </Label>

    </Grid>
</controls:MetroWindow>